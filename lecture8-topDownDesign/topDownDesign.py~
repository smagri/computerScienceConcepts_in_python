#!/usr/bin/env python3

###############################################################################
#     GOOD EXAMPLE for dealing with .cvs files and processing file data!!!    #
###############################################################################

#weather.cvs
#date, highTemp, lowTemp, rainfall

# weather.csv date, high temperature on that date, the low temperature
# on that date,  and the rainfall on that date.


# This type of  file is called a comma-separated value  (CSV) file, or
# sometimes a comma-delimited file. For  data that starts out in Excel
# or another  spreadsheet program,  it’s easy  to use  the spreadsheet
# program to  output the data  values, separated  by commas, as  a CSV
# file.

# HOWTO GET CVS FILE from CUT and PAST
# To get  weather data  like this, you  can go to  any one  of several
# weather  sites, some  of  which  will let  you  download  it into  a
# spreadsheet, but you can ALSO CUT  AND PASTE DATA INTO A SPREADSHEET
# then you can save it in as a CVS file yourself.

###############################################################################
#                https://docs.python.org/3/tutorial/index.html                 #
#                       To refresh your mind on python syntax.
###############################################################################

fname = input("Enter the name of the data file: ")
fhandle = open(fname, 'r')


# We’ll  be reading  in line  after  line, so  this is  going to  mean
# looping through all the lines of the file.  For each of those lines,
# we need  to read in  the line as a  string— remember that  our input
# comes in  as a  string.  Then,  we need to  pull out  the individual
# pieces of data from the string and finally store them in a list that
# we can access  later.  to access individual strings in  the list use
# the .strip() python method.

# eg string delimited by comma and values assigned into a,b,c variables.
# a, b, c, d = line.split(',')

dataListOFlists = [] # a LIST OF LISTS

# #############################################################################
#     This is the COMPACT PYTHON FORM OF READING LINES FROM FILES to EOF      #
###############################################################################
for line in fhandle:
    date, h, l, r = (line.split(','))

    ###########################################################################
    #                          WE NEED TO USE float()                         #
    ###########################################################################
# The following are totally acceptable in python:

# passing a string representation of an integer into int
# passing a string representation of a float into float
# passing a string representation of an integer into float
# passing a float into int
# passing an integer into float

# But you  get a ValueError if  you pass a string  representation of a
# float  into int,  or  a  string representation  of  anything but  an
# integer (INCLUDING EMPTY STRING, ie EOF  = "", and line contains EOL
# character).  If  you DO want  to pass  a string representation  of a
# float to an int, as @katyhuff points out above, you can convert to a
# float first, then to an integer:

# see:
# https://stackoverflow.com/questions/1841565/valueerror-invalid-literal-for-int-with-base-10

# Other ways of doing it, refer to link above.
# The reason you had ValueError is because int cannot convert an empty
# string to the  integer. In this case you'd need  to either check the
# content of the string before conversion, or except an error:

# THIS WILL BE USEFULL for lecture6 ex11 I think, for me using while
# loop with EOF and EOL.


    lowTemp = int(float(l))
    highTemp = int(float(h))
    rainfall = float(r)

    m,d,y = date.split('/')
    month = int(m)
    day = int(d)
    year = int(y)

dataListOFlists.append([day, month, year, lowTemp, highTemp, rainfall])
    
fhandle.close()

print(dataListOFlists[0])
